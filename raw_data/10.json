{"id":10,"name":"情報数学 / MATHEMATICS FOR INFORMATION SCIENCE","account_id":1,"uuid":"yfLx9nD1O5mV2CG6HacLitSoSOWPlgQSmb3bAeam","start_at":null,"grading_standard_id":null,"is_public":false,"created_at":"2020-09-15T06:43:50Z","syllabus_body":"\u003ctable style=\"width: 100%; margin: 0; border-collapse: collapse; background-color: #394B58; color: white;\" border=\"1\"\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n        \u003ctd style=\"width: 50%;\"\u003e\n          B6144\u003cbr\u003e\n          情報数学\u003cbr\u003e\n          \u003cspan style=\"color: #c9c9c9;\"\u003eMATHEMATICS FOR INFORMATION SCIENCE\u003c/span\u003e\n        \u003c/td\u003e\n        \u003ctd\u003e\n          基盤科目-共通科目\u003cbr\u003e\n          \u003cspan style=\"color: #c9c9c9;\"\u003eFundamental Subjects - Interdisciplinary Subjects\u003c/span\u003e\u003cbr\u003e\n          2 単位\n        \u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ctable style=\"width: 100%; margin: 0; border-collapse: collapse; border: 1px solid #C7CDD1;\" border=\"1\"\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"width: 25%; background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e実施形態\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e完全オンライン\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e開催日程\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e秋学期 火曜日１時限\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e担当教員\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e萩野 達也（ハギノ タツヤ）\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e関連科目\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n          前提科目（推奨）: B6117\u003cbr\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e開講場所\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003eSFC\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e授業形態\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e講義\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修者制限\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n          \u003cp\u003e履修人数を制限する\u003cbr\u003e\u003cbr\u003e受入学生数（予定）：約 50 人\u003cbr\u003e選抜方法：システムによる選抜（抽選）\u003cbr\u003e\u003cbr\u003e◯エントリー〆切日時：2020年9月28日（月） 17:00\u003cbr\u003e◯履修許可者発表日時：2020年9月30日（水） 17:00\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e\n          \u003cp style=\"color: #856a5d;\"\u003eOnly the selected students can take this course.\u003cbr\u003e\u003cbr\u003eNumber of students in the class (scheduled) : About 50\u003cbr\u003eAutomatic Screening (Lottery)\u003cbr\u003e\u003cbr\u003e* Schedule: TBD\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修条件\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e使用言語\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e日本語\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e連絡先\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003ehagino@sfc.keio.ac.jp\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e授業ホームページ\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003ehttps://web.sfc.keio.ac.jp/~hagino/mi20/\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e同一科目\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e学生が利用する予定機材/ソフト等\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e設置学部・研究科\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e総合政策・環境情報学部\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e大学院プロジェクト名\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e大学院プロジェクトサブメンバー\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003eゲストスピーカーの人数\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e0\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修選抜・課題タイプ=テキスト登録可\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003efalse\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修選抜・選抜課題タイプ=ファイル登録可\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003efalse\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003eGIGAサティフィケート対象\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e最終更新日\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e2020/07/13 16:27:03\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\u003ch3 style=\"background-color: #394B58; color: white; padding-left: 8px; font-weight: bold;\"\u003e科目概要\u003c/h3\u003e\n\n\u003cp\u003eコンピュータプログラムは入力をもらって出力を出すという意味では数学の関数とみなすことができるが、単純な集合間の関数とみなすと矛盾することになる。プログラムは全関数ではなく半関数である。プログラムの動作を理解するためには位相の一種である完全半順序集合を用いいる必要がある。この講義ではプログラムの意味の基礎となっている領域理論を中心に、λ計算、完全半順序、カテゴリー理論などについて解説する。\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eA programs can be seen as a mathematical function which calculate output value for a given input. However, it is not a simple mathematical function. It is not a total function, but a partial one. In order to understand the property of programs, it is necessary to introduce topology of complete partial order. In this lecture, we will study lambda calculus, domain theory, category theory and so on which are base for mathematical theory of programs.\u003c/p\u003e\n\n\u003ch3 style=\"background-color: #394B58; color: white; padding-left: 8px; margin-bottom: 0; font-weight: bold;\"\u003e授業シラバス\u003c/h3\u003e\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; margin-top: 0; font-weight: bold;\"\u003e主題と目標／授業の手法など\u003c/h4\u003e\n\u003cp\u003eプログラムは入力から出力を計算する数学的な関数とみなすことができる．この授業では．プログラムに対応する関数がどのような性質を持つかについて考える．\u003cbr\u003e最初に，プログラムによる計算を理解するために，プログラムの3つのモデルを比較する：帰納的関数，チューリング機械，ラムダ計算．これらの3つもモデルが同値であることを示す．\u003cbr\u003e次に，ラムダ計算の意味を与える半順序について学ぶ．\u003cbr\u003e最後に，プログラムのデータ型に関係する数学の基礎理論であるカテゴリ理論について取り扱う．\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eA programs can be seen as a mathematical function which calculate output value for a given input. In this lecture, we will look into the property of functions which correspond to programs.\u003cbr\u003eFirstly, in order to understand what we can calculate using programs, we compare three models of programs: recursive functions, turing machines and lambda calculi. We will show that three models are equivalent.\u003cbr\u003eSecondly, we will study complete partial order which gives the model of lambda calculi and programs.\u003cbr\u003eThirdly, in order to understand data types of programs, we will look into category theory which is the abstraction of functions and can show the beauty behind data types.\u003cbr\u003e\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e教材・参考文献\u003c/h4\u003e\n\u003cp\u003e授業でスライドのコピーを配る． Handouts will be distributed in each class.\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e提出課題・試験・成績評価の方法など\u003c/h4\u003e\n\u003cp\u003e期末試験と，演習によって評価する．\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eEvaluated by final examination and exercises.\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e履修上の注意\u003c/h4\u003e\n\u003cp\u003e\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e授業計画\u003c/h4\u003e\n  \u003cp\u003e\n  \u003cu\u003e第1回 Whileプログラム\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[While Program]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eプログラムによる計算について定義する．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eDefine computation by a program.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第2回 原始帰納的関数\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Primitive Recursive Function]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e 原始帰納的関数について定義し，四則演算などを原始帰納的関数として定義する． \u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eDefine primitive recursive functions and define some well known arithmetic functions.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第3回 帰納的関数\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Recursive Function]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e原始帰納的関数を拡張し，帰納的関数を定義する．計算可能な関数が，原始帰納的関数と一致することを示す． \u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eExtend primitive recursive functions to general recursive functions.Show computable functions are equivalent with recursive functions.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第4回 演習(1)\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Exercise(1)]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e帰納的関数に関する演習問題を解く．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eSome exercises for recursive functions.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第5回 チューリング機械\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Turing Machine]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e計算機のモデルとしてチューリング機械を定義する．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eDefine Turing machine which is a model of computation. \u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第6回 チューリング機械と計算可能性\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Turing Machine and Computability]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eチューリング機械と計算可能性が一致することを示す． \u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eShow equivalence of Turing machine and computability.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第7回 演習（2）\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Exercise(2) ]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eチューリング機械に関する演習問題を解く．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eSome exercises for Turing machine\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第8回 ラムダ計算\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Lambda Calculus]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eラムダ式の定義を行い，αおよびβ変換について説明する．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eDefine lambda calculus and introduce alpha. beta and eta conversions.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第9回 ラムダ計算と計算可能性\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Lambda Calculus and Computabilty]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eラムダ式による計算と計算可能性が一致することを示す．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eShow equivalence of lambda calculus and computability.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第10回 演習（3）\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Exercise(3)]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eラムダ計算に関する演習問題を解く．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eSome exercises for lambda calculus.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第11回 完全半順序\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Complete Partial Order Set]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e情報の集合を表すために完全半順序を導入する．また，完全半順序おける積・和・関数空間によるデータ型の構築について説明する．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eIntroduce complete partial order set which represents set of information. Construction of complete partial order sets are also instoduced: cartesian product, disjoint sum, function space.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第12回 連続関数\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Continuous Function]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eプログラムは完全半順序集合間の連続関数であることを示す．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eShow programs can be modeled as continuous functions.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第13回 演習（4）\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Exercise(4)]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e完全半順序に関する演習問題を解く．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eSome exercises for CPOs.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第14回 カテゴリー理論入門\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Introduction to Category Theory]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eカテゴリー理論について説明する。カテゴリー、射、対象、関手などについて定義する。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eIntroduce category theory which can give alternative foundation of mathematics. It is much more intuitive than set theory and is easier to see hidden relationships between objects.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第15回 カテゴリー理論とデータ型\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Category Theory and Data Type]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eプログラミング言語におけるデータ型をカテゴリー理論を用いて説明する．\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eUnderstand the connection between category theory and data type in programs.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n\n  \u003cu\u003e15回目に相当するその他の授業計画\u003c/u\u003e\u003cbr\u003e\n  \u003cp\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n","course_code":"情報数学","default_view":"modules","root_account_id":1,"enrollment_term_id":3,"license":null,"grade_passback_setting":null,"end_at":null,"public_syllabus":false,"public_syllabus_to_auth":true,"storage_quota_mb":30000,"is_public_to_auth_users":true,"term":{"id":3,"name":"2020年秋学期","start_at":null,"end_at":null,"created_at":"2020-09-03T21:25:41Z","workflow_state":"active","grading_period_group_id":null},"apply_assignment_group_weights":false,"calendar":{"ics":"https://sol.sfc.keio.ac.jp/feeds/calendars/course_yfLx9nD1O5mV2CG6HacLitSoSOWPlgQSmb3bAeam.ics"},"time_zone":"Asia/Tokyo","blueprint":false,"enrollments":[],"hide_final_grades":false,"workflow_state":"available","restrict_enrollments_to_course_dates":false,"overridden_course_visibility":""}