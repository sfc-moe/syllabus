{"id":1557,"name":"オブジェクト指向プログラミング基礎 / FUNDAMENTALS OF OBJECT-ORIENTED PROGRAMMING","account_id":1,"uuid":"dDq61kUlmqqyMCbApj6wa8daBD1g2HFpqXKI8VQj","start_at":"2020-10-07T15:00:00Z","grading_standard_id":null,"is_public":false,"created_at":"2020-10-01T04:40:56Z","syllabus_body":"\u003ctable style=\"width: 100%; margin: 0; border-collapse: collapse; background-color: #394B58; color: white;\" border=\"1\"\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n        \u003ctd style=\"width: 50%;\"\u003e\n          B4004\u003cbr\u003e\n          オブジェクト指向プログラミング基礎\u003cbr\u003e\n          \u003cspan style=\"color: #c9c9c9;\"\u003eFUNDAMENTALS OF OBJECT-ORIENTED PROGRAMMING\u003c/span\u003e\n        \u003c/td\u003e\n        \u003ctd\u003e\n          特設科目\u003cbr\u003e\n          \u003cspan style=\"color: #c9c9c9;\"\u003eSpecial Seminars\u003c/span\u003e\u003cbr\u003e\n          2 単位\n        \u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ctable style=\"width: 100%; margin: 0; border-collapse: collapse; border: 1px solid #C7CDD1;\" border=\"1\"\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"width: 25%; background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e実施形態\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e完全オンライン\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e開催日程\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e秋学期 木曜日４時限\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e担当教員\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e箕原 辰夫（ミノハラ タツオ）\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e関連科目\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n          前提科目（必須）: B4001\u003cbr\u003e\n          前提科目（推奨）: B4001,B4002\u003cbr\u003e\n          前提科目（関連）: B6135,60780,B4005\u003cbr\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e開講場所\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003eSFC\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e授業形態\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e講義、実習・演習\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修者制限\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n          \u003cp\u003e履修人数を制限する\u003cbr\u003e\u003cbr\u003e受入学生数（予定）：約 40 人\u003cbr\u003e選抜方法：システムによる選抜（抽選）\u003cbr\u003e\u003cbr\u003e◯エントリー〆切日時：2020年9月28日（月） 17:00\u003cbr\u003e◯履修許可者発表日時：2020年9月30日（水） 17:00\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e\n          \u003cp style=\"color: #856a5d;\"\u003eOnly the selected students can take this course.\u003cbr\u003e\u003cbr\u003eNumber of students in the class (scheduled) : About 40\u003cbr\u003eAutomatic Screening (Lottery)\u003cbr\u003e\u003cbr\u003e* Schedule: TBD\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修条件\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n        \u003cp\u003e「情報基礎１」の単位を取得していること。プログラミングについて「情報基礎２」相当の知識があれば履修が可能だが、\u003cbr\u003eそうでなければ「情報基礎２」の履修を強く推奨する。\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003eYou must have earned credits of \"Fundamentals of Information Technology 1\". If you have knowledge equivalent to \"Fundamentals of Information Technology 2\" about programming, you can take this course, otherwise it is strongly recommended to take \"Fundamentals of Information Technology 2\" beforehand.\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e使用言語\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e日本語\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e連絡先\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003eminohara@sfc.keio.ac.jp\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e授業ホームページ\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003ehttp://web.sfc.keio.ac.jp/~minohara/lectureslide/python/\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e同一科目\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e学生が利用する予定機材/ソフト等\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003ePython IDLE, BBEdit, MacBook Air/Proなど\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003ePython, BBEdit, MacBook Air/Proなど\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e設置学部・研究科\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e総合政策・環境情報学部\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e大学院プロジェクト名\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e大学院プロジェクトサブメンバー\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003eゲストスピーカーの人数\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e0\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修選抜・課題タイプ=テキスト登録可\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003efalse\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修選抜・選抜課題タイプ=ファイル登録可\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003efalse\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003eGIGAサティフィケート対象\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e最終更新日\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e2020/09/23 13:31:36\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\u003ch3 style=\"background-color: #394B58; color: white; padding-left: 8px; font-weight: bold;\"\u003e科目概要\u003c/h3\u003e\n\n\u003cp\u003eオブジェクト指向プログラミング言語を用いたプログラミング科目です。プログラミング実習も行ないます。プログラミング言語としてはPythonを扱います。情報基礎で学んだプログラミングの復習が主体となる授業になっています。Pythonを用いて、基本的なプログラミングの仕方を復習すると共に、Python流のリストを用いた様々なプログラミングを学んでいきます。タートルグラフィックスなどの実際の問題解決に必要な標準ライブラリを扱いながら、オブジェクトを利用する形でのプログラミングパラダイムを身に付けていけるような実習型の講義を行ないます。\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eIn this lecture, the object oriented programming using with Python scripting language are mainly studied. Because Python language that has been learned in the previous lecture classes, the main target of this lecture is to follow up developing the ability of basic programming again. Using the standard libraries including the turtle graphic library, students studies the programming paradigm, especially using the objects of the standard libraries. The style of lecture is to the discipline of the typing keys of keyboard according to program coding, and to the practice of making programs.\u003c/p\u003e\n\n\u003ch3 style=\"background-color: #394B58; color: white; padding-left: 8px; margin-bottom: 0; font-weight: bold;\"\u003e授業シラバス\u003c/h3\u003e\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; margin-top: 0; font-weight: bold;\"\u003e主題と目標／授業の手法など\u003c/h4\u003e\n\u003cp\u003eオブジェクト指向プログラミングをスクリプト言語Pythonをベースに学んでいます。JavaScriptかPythonで、プログラムの初歩教育を受けた人を対象に、インタープリタを基本としてのプログラミングの開発を通して、最終的にはオブジェクト指向特有の様々な概念モデルを学んでいきます。しかしながら、講義の主な目的は、Pythonというプログラミング言語を用いて、プログラミングの基礎を学ぶことにあります。オブジェクト指向やクラス設計などの進んだ内容を受講したい人は、別のクラスの授業を履修した方が良いでしょう。授業スタイルは、講義を行ない、間にプロジェクタに映し出されたプログラムを入力してもらうという実習を挟んでいく形の授業展開になります。実習の際に、落ちこぼれないようにプログラムのテキストは、SFSの方にもアップロードする予定でいます。実際にプログラムを入力していきながらの受講となりますが、教員側は、その場でコメントも入力しますので、何をプログラムしているのか理解して貰いながら進んでいくことになります。その際に、タイピングや開発環境の問題などで引っ掛からないようにしておいて下さい。特に毎回、新しい概念モデルが出てきますので、英語の専門用語にアレルギーを起こさないように注意してください。\u003cbr\u003e\u003cbr\u003e開発環境はPythonのIDLEと、Mac OS Xの場合は日本語入力に対応したBBEditを用います。インストールした後にカスタマイズします。実習は通常教室なので、各自のノート型PC（Mac OS X、あるいはWindow 10のいずれかが稼働していることを前提とします）に開発環境をインストールして行なってもらいます。\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eThe students study the concept of object oriented programming with Python scripting language. In this lecture, the students handle the integrated developing environment based on interpreter, and various concept models those are specific to the object oriented programming. The target of this lecture is to design programs through studying each primary method on the programming. Each lecture is interleaved with the practices in those the programs displayed on projector. Those programs are also written by students themselves. The source text of programs will be uploaded to SFS. The comments on program those express how each part of program functions at the total algorithm are also typed in the practice, so that students understand meaning of the notation of the part of the program. Because quantity of typing is large, students should have trainings of typing English words. The newer concept words will be introduced to in each lecture class, so that students must be familiar with English terminologies.\u003cbr\u003e\u003cbr\u003ePython IDLE and BBEdit are selected as the main developing environment. The settings of the developing environments will be customized to the lecture class, so that the students can get references the customization by the web lecture page. Because the lecture class room is a normal class room, and is not a computer room, each student should bring own note typed computer in which either Mac OS X or Windows 7 is running as its main operating system. The developing environments for the lecture are installed by students themselves.\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e教材・参考文献\u003c/h4\u003e\n\u003cp\u003e1) Guido van Rossum, Pythonチュートリアル 第3版, オライリージャパン, 2016, 260ページ, ISBN-13: 978-4873117539.\u003cbr\u003e2) Bill Lubanovic, 入門 Python 3, オライリージャパン, 2015, 600ページ, ISBN-13: 978-4873117386.\u003cbr\u003e3) 石本 敦夫, Python文法詳解, オライリージャパン, 2014, 332ページ, ISBN-13: 978-4873116884\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e提出課題・試験・成績評価の方法など\u003c/h4\u003e\n\u003cp\u003e最終課題とその報告書も含め、課題を6回程提出してもらいます（SFSからの提出）。試験は行いません。成績の評価は、授業への参加度（授業内でWebExなどの機能を利用して簡単な復習テストなどを行ないます）および提出課題によって行ないます。\u003cbr\u003e\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eIncluding the program for the final assignment and its report, the assignments should be submitted via SFS about six ~ eight times. There is no final exam in this lecture. The evaluation of the result of each student is based on the aggressiveness to each lecture class and the submission of the assignments.\u003cbr\u003e\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e履修上の注意\u003c/h4\u003e\n\u003cp\u003e第１回目の授業に必ず出席して下さい。そこで開発環境の設定をします。１回目の授業に来ない人がいると、その人のために２回目以降の授業で時間が潰れてしまいます。\u003cbr\u003e\u003cbr\u003ePythonの言語的な側面を学ぶ授業になっています。単位を取得するためだけに履修を考えている人には、かなり苦痛になる可能性があります。情報基礎のPythonで落ちこぼれた人が主な対象になるかと思います。ただし、情報基礎でのPythonの講義内容より、より深く学んでいく科目になります。\u003cbr\u003e\u003cbr\u003e自分のノートPCを利用しての実習になります。Windows 7 または 8の人は対応できませんので、Windows 10にアップデートするか、MacBook Pro/Airを利用して下さい。特に、Windowsの場合は、様々な点において不利になります。なるべく、MacBook Pro/Airを利用して下さい。\u003cbr\u003e\u003cbr\u003eまた、訓練式の演習の部分が多くありますので、自分のノートPCにおいて英語のタイピングが遅い人には「決定的に不利」になります。英語のタイピングが遅いと授業で何をしているのかわからないことになりますので、予め注意して下さい。\u003cbr\u003e\u003cbr\u003e授業計画の第7回・第14回・第15回は、通常の授業日とは別の日程で行なう予定にしています。予定を授業中およびSFSでアナウンスしますので、受講したい人だけ受講して下さい。成績には関係ありません。\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eIn addition to MacBook Air/Pro as the standard PC in this class, Windows 10 is also applicable to the class. However, MacBooks are more suitable. The user of Windows 7 or 8 should update the operating system to Windows 10.\u003cbr\u003e\u003cbr\u003eThe additional lecture classes will be set for making up the assignment or for other techniques on Python programming.\u003c/p\u003e\n\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e授業計画\u003c/h4\u003e\n  \u003cp\u003e\n  \u003cu\u003e第1回 オブジェクト指向プログラミングへの導入\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Introduction to Object Oriented programming]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e１−１．オブジェクト指向プログラミング言語の系譜 \u003cbr\u003e１−２．環境環境の設定 \u003cbr\u003e１−３．オブジェクト指向モデルの基本\u003cbr\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e1-1. Genealogy of object oriented programming languages\u003cbr\u003e1-2. Settlement of Interactive Development Environment\u003cbr\u003e1-3. Object oriented programming model\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第2回 型と式・変数と代入\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[ Type, expression, and assignment]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e２−１．型とリテラル\u003cbr\u003e２−２．式と評価 \u003cbr\u003e２−３．変数と代入\u003cbr\u003e２−４．シーケンス型のリテラル\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e2-1. Primitive types and those literals\u003cbr\u003e2-2. Expression and evaluation\u003cbr\u003e2-3. Using variables and assignment\u003cbr\u003e2-4. literals of sequential types\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第3回 ターミナルへの入出力\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Input/output to terminal]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e３−１．ターミナルからの入力\u003cbr\u003e３−２．コンソールへの出力 \u003cbr\u003e３−３．値の型変換\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e3-1. Input from terminal\u003cbr\u003e3-2. Output to terminal\u003cbr\u003e3-3. Type conversion of value\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第4回 条件分岐\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Conditional branch]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e４−１．条件分岐 \u003cbr\u003e４−２．論理式 \u003cbr\u003e４−３．if式 \u003cbr\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e4-1. Conditional branch\u003cbr\u003e4-2. Logical expression\u003cbr\u003e4-3. if expression\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第5回 繰返し\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Repetition]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e５−１．while文による繰返し \u003cbr\u003e５−２．繰返しのネスト \u003cbr\u003e５−３．整数剰余と整数除算 \u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e5-1. Repetition with \"while\" statement\u003cbr\u003e5-2. Nesting while statements\u003cbr\u003e5-3. Modular operation and division operation in integer\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第6回 for文による繰返し\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Repetition with for statement]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e６−１．for文による繰返し \u003cbr\u003e６−２．for文によるリスト生成 \u003cbr\u003e６−３．制御文の組み合わせ\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e6-1. Repetition with \"for\" statement\u003cbr\u003e6-2. Production of lists by \"for\" statement\u003cbr\u003e6-3. Combination of control statements\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第7回 その他の制御構文\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Other control statements]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e７−１．その他の制御文\u003cbr\u003e７−２．try文によるsqlite利用\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e7-1. Other control statements\u003cbr\u003e7-2. Usages of sqlite with \"try\" statements\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第8回 オブジェクトの利用\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Using objects]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e８−１．オブジェクトの利用 \u003cbr\u003e８−２．tkinterモジュールのオブジェクト \u003cbr\u003e８−３．標準ライブラリの中でのオブジェクト\u003cbr\u003e８−４．実数式と実数における誤差 \u003cbr\u003e８−５．mathモジュールの関数 \u003cbr\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e8-1. Using objects with library\u003cbr\u003e8-2. Object classes in tkinter module\u003cbr\u003e8-3. Object classes in the standard libraries\u003cbr\u003e8-4. Expressions with real numbers and errors in calculations of real numbers\u003cbr\u003e8-5. Functions of math module\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第9回 標準ライブラリ\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Standard libraries]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e９−１．タートルグラフィックス\u003cbr\u003e９−２．ファイルの入出力\u003cbr\u003e９−３．インターネットWebページからの入力\u003cbr\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e9-1. Turtle graphics\u003cbr\u003e9-2. File input/output\u003cbr\u003e9-3. Input from web pages on internet\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第10回 関数定義\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Defining functions]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e１０−１．関数定義の仕方と定義された関数の呼出し \u003cbr\u003e１０−２．Python特有のパラメータの渡し方\u003cbr\u003e１０−３．グローバル変数の宣言と使用 \u003cbr\u003e１０−４．値を返す関数\u003cbr\u003e１０−５．整数演算のアルゴリズム \u003cbr\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e10-1. Definition of function and function call\u003cbr\u003e10-2. Python-specific parameter passing\u003cbr\u003e10-3. Global variables in a function\u003cbr\u003e10-4. Functions returning values\u003cbr\u003e10-5. Algorithms using integer numbers\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第11回 再帰関数\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Recursive functions]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e１１−１．再帰関数 \u003cbr\u003e１１−２．再帰関数を利用した描画 \u003cbr\u003e１１−３．高階関数の利用\u003cbr\u003e１１−４．無名関数\u003cbr\u003e１１−５．高階関数を利用したtkinterのcallback\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e11-1. Recursive function\u003cbr\u003e11-2. Drawing with recursive functions\u003cbr\u003e11-3. High-order functions\u003cbr\u003e11-4. Untitled functions\u003cbr\u003e11-5. callbacks of tkinter GUI\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第12回 リスト\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Operations on lists]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e１３−１．リストと初期値代入、スライス標記 \u003cbr\u003e１３−２．リストへの典型的な操作 \u003cbr\u003e１３−３．リストのソート・シャッフル・頻度など\u003cbr\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e12-1. List and its initial value assignment, slice\u003cbr\u003e12-2. Typical operations on list \u003cbr\u003e12-3. Sort, shuffle on list and requiring frequencies of data\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第13回 ２次元リストと文字列のリスト\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Matix and list of strings]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e１４−１．２次元リスト\u003cbr\u003e１４−２．文字列のスライス\u003cbr\u003e１４−３．文字列に対する関数\u003cbr\u003e１４−４．文字列のリスト\u003cbr\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e13-1. Matrix\u003cbr\u003e13-2. Slice operators on string\u003cbr\u003e13-3. Functions on string,\u003cbr\u003e13-4. List of strings\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第14回 タプル・集合・辞書\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Tuple, set, and iterator]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e１４−１．タプル \u003cbr\u003e１４−２．イテレータ、集合クラス \u003cbr\u003e１４−３．ハッシュテーブル （辞書クラス）\u003cbr\u003e１４−４．構造体としてのクラスの利用\u003cbr\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e14-1. Tuple\u003cbr\u003e14-2. Collection and iterator\u003cbr\u003e14-3. Dictionary (hash table)\u003cbr\u003e14-4. Usage of class definition as structure\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第15回 総合的なクラスの定義\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Definition of class]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e１５−１．総合的なクラスの定義\u003cbr\u003e１５−２．コンストラクタ・ 演算子用のメソッド\u003cbr\u003e１５−３．継承・メソッドの上書き \u003cbr\u003e１５−４．クラス定義を用いた応用 \u003cbr\u003e１５−５．２進数の内部表現に関しての演算\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e15-1. Integrated class definitions\u003cbr\u003e15-2. Constructor and methods for operations\u003cbr\u003e15-3. class with functions, Inheritances, and method overwriting\u003cbr\u003e15-4. Applications using class definition\u003cbr\u003e15-5. Operations on binary representation of numbers\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n\n  \u003cu\u003e15回目に相当するその他の授業計画\u003c/u\u003e\u003cbr\u003e\n  \u003cp\u003e第１６回目の授業を行なう場合、次のような内容で行ないます。\u003cbr\u003e\u003cbr\u003e第１６回　クラスの定義\u003cbr\u003e１６−１．クラスの使用 \u003cbr\u003e１６−２．コンストラクタの定義 \u003cbr\u003e１６−３．総合的なクラスの定義\u003cbr\u003e１６ー４．継承を伴うクラス定義\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e16. Class definitions\u003cbr\u003e16-1. Class definition\u003cbr\u003e16-2. Constructor\u003cbr\u003e16-3. Class with functions\u003cbr\u003e16-4. Class definition with inheritance\u003c/p\u003e\n","course_code":"オブジェクト指向プログラミング基礎","default_view":"modules","root_account_id":1,"enrollment_term_id":3,"license":"private","grade_passback_setting":null,"end_at":null,"public_syllabus":false,"public_syllabus_to_auth":true,"storage_quota_mb":30000,"is_public_to_auth_users":true,"term":{"id":3,"name":"2020年秋学期","start_at":null,"end_at":null,"created_at":"2020-09-03T21:25:41Z","workflow_state":"active","grading_period_group_id":null},"apply_assignment_group_weights":false,"calendar":{"ics":"https://sol.sfc.keio.ac.jp/feeds/calendars/course_dDq61kUlmqqyMCbApj6wa8daBD1g2HFpqXKI8VQj.ics"},"time_zone":"Asia/Tokyo","blueprint":false,"enrollments":[],"hide_final_grades":false,"workflow_state":"available","restrict_enrollments_to_course_dates":false,"overridden_course_visibility":""}