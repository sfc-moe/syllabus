{"id":54,"name":"関数型プログラミング / FUNCTIONAL PROGRAMMING","account_id":1,"uuid":"nMHbzLVag8QZF8znQm4pQUdgdcQuHj9X5t9By8S5","start_at":null,"grading_standard_id":null,"is_public":false,"created_at":"2020-09-15T06:43:52Z","syllabus_body":"\u003ctable style=\"width: 100%; margin: 0; border-collapse: collapse; background-color: #394B58; color: white;\" border=\"1\"\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n        \u003ctd style=\"width: 50%;\"\u003e\n          C2074\u003cbr\u003e\n          関数型プログラミング\u003cbr\u003e\n          \u003cspan style=\"color: #c9c9c9;\"\u003eFUNCTIONAL PROGRAMMING\u003c/span\u003e\n        \u003c/td\u003e\n        \u003ctd\u003e\n          特設科目\u003cbr\u003e\n          \u003cspan style=\"color: #c9c9c9;\"\u003eSpecial Seminars\u003c/span\u003e\u003cbr\u003e\n          2 単位\n        \u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ctable style=\"width: 100%; margin: 0; border-collapse: collapse; border: 1px solid #C7CDD1;\" border=\"1\"\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"width: 25%; background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e実施形態\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e完全オンライン\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e開催日程\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e秋学期 火曜日３時限\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e担当教員\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e萩野 達也（ハギノ タツヤ）\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e関連科目\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n          前提科目（推奨）: B4002,B4001\u003cbr\u003e\n          前提科目（関連）: C2101,C2073,C2072,B6135,B4005,B4004,B4003\u003cbr\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e開講場所\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003eSFC\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e授業形態\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e講義、実習・演習\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修者制限\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n          \u003cp\u003e履修人数を制限する\u003cbr\u003e\u003cbr\u003e受入学生数（予定）：約 30 人\u003cbr\u003e選抜方法：システムによる選抜（抽選）\u003cbr\u003e\u003cbr\u003e◯エントリー〆切日時：2020年9月28日（月） 17:00\u003cbr\u003e◯履修許可者発表日時：2020年9月30日（水） 17:00\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e\n          \u003cp style=\"color: #856a5d;\"\u003eOnly the selected students can take this course.\u003cbr\u003e\u003cbr\u003eNumber of students in the class (scheduled) : About 30\u003cbr\u003eAutomatic Screening (Lottery)\u003cbr\u003e\u003cbr\u003e* Schedule: TBD\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修条件\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n        \u003cp\u003eYou must have earned credits of \"Fundamentals of Information Technology 1/Fundaentals of Information Technology\" excluding those who failed typing exam or passed the qualification examination. If you have knowledge equivalent to \"Fundamentals of Information Technology 2\" about programming, you can take this course, otherwise it is strongly recommended to take \"Fundamentals of Information Technology 2\" beforehand.\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e「情報基礎１/情報基礎」の単位を取得していること（ただしタイピング試験不合格者は履修不可）。プログラミングについて「情報基礎２」相当の知識があれば履修が可能だが、そうでなければ「情報基礎２」の履修を強く推奨する。\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e使用言語\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e英語\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e連絡先\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003ehagino@sfc.keio.ac.jp\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e授業ホームページ\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003ehttps://web.sfc.keio.ac.jp/~hagino/fp20/\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e同一科目\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e学生が利用する予定機材/ソフト等\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003eHaskell, Text Editor\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003eHaskell, テキストエディタ\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e設置学部・研究科\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e総合政策・環境情報学部\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e大学院プロジェクト名\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e大学院プロジェクトサブメンバー\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003eゲストスピーカーの人数\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e0\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修選抜・課題タイプ=テキスト登録可\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003efalse\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修選抜・選抜課題タイプ=ファイル登録可\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003efalse\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003eGIGAサティフィケート対象\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003etrue\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e最終更新日\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e2020/07/13 16:30:09\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\u003ch3 style=\"background-color: #394B58; color: white; padding-left: 8px; font-weight: bold;\"\u003e科目概要\u003c/h3\u003e\n\n\u003cp\u003eMost of the programming languages including C and Java are procedural, but this class deals with functional programming languages which are built on top of totally different concept from procedural ones. In function programming languages, programs are constructed by combining functions. Functions are treated as ordinal values and higher order functions make programs simple for complicated problems.\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eC言語やJavaなどほとんどのプログラミング言語は手続き型プログラミング言語であるが，この授業では手続き型とは全く異なった考え方を持って作られている関数型プログラミング言語について学ぶ．関数型プログラミング言語では，関数を組み合わせることでプログラムを書き，関数を評価することで計算を行う．関数自身を値と考えて取り扱うこともでき，複雑な処理を高階関数を使うことで簡単に書くことができる．\u003c/p\u003e\n\n\u003ch3 style=\"background-color: #394B58; color: white; padding-left: 8px; margin-bottom: 0; font-weight: bold;\"\u003e授業シラバス\u003c/h3\u003e\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; margin-top: 0; font-weight: bold;\"\u003e主題と目標／授業の手法など\u003c/h4\u003e\n\u003cp\u003eIt is very important to know there are programming languages of which principle is different from that of procedural programming languages like C, Java, BASIC, FORTRAN and so on. In this lecture, we will study Haskell. Haskell is a quite unique programming language not only because it is a functional programming language, but also its evaluation is lazy and it also use Monad to handle side effects. It may be totally new experience of writing programs in Haskell.\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eプログラミング言語には，C言語やJavaやBASICやFORTRANなどの使い慣れた手続き型以外の言語も多く存在します．この授業では関数型プログラミング言語であるHaskellについて学びます．Haskellは関数型であるだけなく，遅延評価やMonadを使うことで副作用を表すなど，面白い機能が色々あります．Haskellでプログラムを書くことはこれまでのプログラミングとは全く異なるかもしれません．\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e教材・参考文献\u003c/h4\u003e\n\u003cp\u003eBryan O'Sullivan, Don Stewart, and John Goerzen ``Real World Haskell'' O'Reilly\u003cbr\u003eMiran Lipovača ``Learn You a Haskell for Great Good!'' No Starch Press\u003cbr\u003eRichard Bird ``Introduction to Functional Programming using Haskell'' Prentice Hall\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e提出課題・試験・成績評価の方法など\u003c/h4\u003e\n\u003cp\u003eThere will be a final examination as well as home works for each week.\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003e毎週の課題および最終試験の結果で評価します．\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e履修上の注意\u003c/h4\u003e\n\u003cp\u003eYou need to install Haskell in your PC. The Haskell platform is available on Windows, OS X and Linux.\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eHaskellの処理系を自分のPCにインストールする必要があります．HaskellはWindows, MacおよびLinuxで利用可能です．\u003c/p\u003e\n\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e授業計画\u003c/h4\u003e\n  \u003cp\u003e\n  \u003cu\u003e第1回 Introduction to Haskell\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Haskellの概要]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eInstall Haskell Platform into your PC and write several simple first programs in Haskell.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eHaskell PlatformをPCにインストールし，簡単なプログラムを書いてみます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第2回 Basic(1) Function and List\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Haskellの基礎(1) 関数とリスト]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eStudy basic use of functions and lists in Haskell.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eHaskellにおける関数とリストについて学びます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第3回 Basic(2) Type and Higher Order Function\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Haskellの基礎(2) 型と高階関数]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eUnderstand type and study functions as values.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e型と関数について学びます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第4回 Basic(3) Module and Exercise\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Haskellの基礎(3) モジュールと総合演習]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eStudy module and conduct general exercise to check what we have studied.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eここまでに学んだ内容について確認の総合演習をします．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第5回 Lazy Evaluation\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[遅延評価]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eStudy evaluation mechanism of Haskell.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eHaskellの評価方法である遅延評価について学びます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第6回 Basic Values\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[基本的な値]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eStudy boolean, integer, character, string, tuple and list.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e真偽値，整数，文字，文字列，タプル，リストなどについて学びます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第7回 Basic Syntax\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[基本的な構文]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eStudy syntax of writing functions in Haskell.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e関数を書くための構文について学びます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第8回 Functions\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[関数]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eStudy functions more deeply.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e関数についてさらに深く学びます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第9回 Type and Class\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[型と型クラス]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eDefine new type and introduce type class.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e新しい型の定義の仕方と，型クラスについて学びます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第10回 Module\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[モジュール]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eStudy about modules.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eモジュールの使い方，定義の仕方について学びます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第11回 Monad\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[モナド]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eStudy Monad: Maybe, List, IO.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eMaybe, List, IOなどのモナドとその構文について学びます．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第12回 Exercise (1)\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[演習(1)]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eSolve some problems using Haskell.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eHaskellを使った演習を行います．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第13回 Exercise (2)\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[演習(2)]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eSolve some problems using Haskell.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eHaskellを使った演習を行います．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第14回 Exercise (3)\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[演習(3)]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eSolve some problems using Haskell.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eHaskellを使った演習を行います．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第15回 Exercise (4)\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[演習(4)]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eSolve some problems using Haskell.\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003eHaskellを使った演習を行います．\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n\n  \u003cu\u003e15回目に相当するその他の授業計画\u003c/u\u003e\u003cbr\u003e\n  \u003cp\u003e\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n","course_code":"関数型プログラミング","default_view":"modules","root_account_id":1,"enrollment_term_id":3,"license":null,"grade_passback_setting":null,"end_at":null,"public_syllabus":false,"public_syllabus_to_auth":true,"storage_quota_mb":30000,"is_public_to_auth_users":true,"term":{"id":3,"name":"2020年秋学期","start_at":null,"end_at":null,"created_at":"2020-09-03T21:25:41Z","workflow_state":"active","grading_period_group_id":null},"apply_assignment_group_weights":false,"calendar":{"ics":"https://sol.sfc.keio.ac.jp/feeds/calendars/course_nMHbzLVag8QZF8znQm4pQUdgdcQuHj9X5t9By8S5.ics"},"time_zone":"Asia/Tokyo","blueprint":false,"enrollments":[],"hide_final_grades":false,"workflow_state":"available","restrict_enrollments_to_course_dates":false,"overridden_course_visibility":""}