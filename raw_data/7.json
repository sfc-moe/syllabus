{"id":7,"name":"プログラミング言語論 / PROGRAMMING LANGUAGES","account_id":1,"uuid":"H0BDDKTcsO8mmFEiXglcXBBi1OV2FjAY1uCnvc2e","start_at":null,"grading_standard_id":null,"is_public":false,"created_at":"2020-09-15T06:43:49Z","syllabus_body":"\u003ctable style=\"width: 100%; margin: 0; border-collapse: collapse; background-color: #394B58; color: white;\" border=\"1\"\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n        \u003ctd style=\"width: 50%;\"\u003e\n          C2101\u003cbr\u003e\n          プログラミング言語論\u003cbr\u003e\n          \u003cspan style=\"color: #c9c9c9;\"\u003ePROGRAMMING LANGUAGES\u003c/span\u003e\n        \u003c/td\u003e\n        \u003ctd\u003e\n          先端開拓科目-環境情報-情報とメディア\u003cbr\u003e\n          \u003cspan style=\"color: #c9c9c9;\"\u003eFrontier Courses (Advanced) - Environmental Information - Information and Media\u003c/span\u003e\u003cbr\u003e\n          2 単位\n        \u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ctable style=\"width: 100%; margin: 0; border-collapse: collapse; border: 1px solid #C7CDD1;\" border=\"1\"\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"width: 25%; background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e実施形態\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e完全オンライン\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e開催日程\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e秋学期 金曜日３時限\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e担当教員\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e服部 隆志（ハツトリ タカシ）\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e関連科目\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n          前提科目（推奨）: B4005,B4004,B4003\u003cbr\u003e\n          前提科目（関連）: C2074\u003cbr\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e開講場所\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003eSFC\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e授業形態\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e講義\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修者制限\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修条件\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e2つ以上のプログラミング言語についての知識があること\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003eYou need to have knowledge about at least two programming languages.\u003c/p\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e使用言語\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e日本語\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e連絡先\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003ehattori@sfc.keio.ac.jp\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e授業ホームページ\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003ehttp://web.sfc.keio.ac.jp/~hattori/prog-theory/\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e同一科目\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e学生が利用する予定機材/ソフト等\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e設置学部・研究科\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e総合政策・環境情報学部\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e大学院プロジェクト名\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e大学院プロジェクトサブメンバー\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\n        \u003cp\u003e\u003c/p\u003e\n        \u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003eゲストスピーカーの人数\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e0\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修選抜・課題タイプ=テキスト登録可\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003efalse\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e履修選抜・選抜課題タイプ=ファイル登録可\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003efalse\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003eGIGAサティフィケート対象\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"background-color: #F5F5F5; border-color: #C7CDD1;\"\u003e最終更新日\u003c/td\u003e\n      \u003ctd style=\"border-color: #C7CDD1;\"\u003e2020/07/20 17:33:41\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\n\n\u003ch3 style=\"background-color: #394B58; color: white; padding-left: 8px; font-weight: bold;\"\u003e科目概要\u003c/h3\u003e\n\n\u003cp\u003e世の中には様々なプログラミング言語が存在し、それぞれが様々な特徴を持っている。この授業では、そのようなプログラミング言語の背後にある共通の概念についてとりあげる。具体的には、形式文法、データ型、プログラミング・パラダイム、 並列プログラミング、プログラムの検証、意味論などの概略を紹介し、コンピュータ・サイエンスの専門的な研究を行うための広範囲の基礎知識を得ることを目的とする。あくまで理論的な理解を主眼としており、具体的なプログラミングの演習ではないことに注意。\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eWe have so many programming languages in the world.  In this course, we investigate common concepts behind various programming languages.  Our main goal is to gain the fundamental knowledge of computer science such as formal grammar, data types, programming paradigms, etc. through the concepts found in programming languages.  Note that we focus on theoretical understanding, not practical skills of programming.\u003cbr\u003e\u003c/p\u003e\n\n\u003ch3 style=\"background-color: #394B58; color: white; padding-left: 8px; margin-bottom: 0; font-weight: bold;\"\u003e授業シラバス\u003c/h3\u003e\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; margin-top: 0; font-weight: bold;\"\u003e主題と目標／授業の手法など\u003c/h4\u003e\n\u003cp\u003e世の中には様々なプログラミング言語が存在し、それぞれが様々な特徴を持っている。この授業では、そのようなプログラミング言語の背後にある共通の概念についてとりあげる。具体的には、形式文法、データ型、プログラミング・パラダイム、 並列プログラミング、プログラムの検証、意味論などの概略を紹介し、コンピュータ・サイエンスの専門的な研究を行うための広範囲の基礎知識を得ることを目的とする。あくまで理論的な理解を主眼としており、具体的なプログラミングの演習ではないことに注意。\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eWe have so many programming languages in the world, each of which has unique features.  In this course, we investigate common concepts behind various programming languages.  Our main goal is to gain the fundamental knowledge of computer science such as formal grammar, data types, programming paradigms, concurrency, through the concepts found in programming languages.  Note that we focus on theoretical understanding, not practical skills of programming.\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e教材・参考文献\u003c/h4\u003e\n\u003cp\u003eJohn C. Mitchell, Concepts in Programming Languages, Cambridge University Press, 2003\u003cbr\u003eRobert W. Sebesta, Concepts of Programming Languages, Addison Wesley, 2002\u003cbr\u003e五十嵐淳, プログラミング言語の基礎概念, サイエンス社, 2011, ISBN978-4-7819-1285-1\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e提出課題・試験・成績評価の方法など\u003c/h4\u003e\n\u003cp\u003e中間レポートを提出し、授業時間中にひとりずつ発表を行う。\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003eWe have a mid-term paper.  You need to give a presentation about your mid-term paper in the class.\u003c/p\u003e\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e履修上の注意\u003c/h4\u003e\n\u003cp\u003e\u003c/p\u003e\n\u003cp style=\"color: #856a5d;\"\u003e\u003c/p\u003e\n\n\n\u003ch4 style=\"background-color: #ccecff; padding-left: 8px; font-weight: bold;\"\u003e授業計画\u003c/h4\u003e\n  \u003cp\u003e\n  \u003cu\u003e第1回 プログラミング言語とは\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Introduction]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eプログラミング言語の発展の歴史とさまざまなパラダイムを簡単に紹介する。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- History of programming languages. \u003cbr\u003e- Programming paradigms.\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第2回 構文と意味\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Syntax and Semantics]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eプログラミング言語における文法と意味とは何か。 \u003cbr\u003e形式言語理論の初歩と、プログラムの意味を定義する方法について。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Definition of syntax and semantics in programming languages. \u003cbr\u003e- Basics of the formal language theory. \u003cbr\u003e- Brief introduction to the semantic theory. \u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第3回 名前と束縛と変数\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Names, Variables, and Bindings]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eプログラミング言語において名前が果たす役割。 \u003cbr\u003e変数の束縛と有効範囲の概念。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- How names are used in programming languages. \u003cbr\u003e- Bindings of names and variables. \u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第4回 型\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Type]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e代表的なデータ型の紹介。 \u003cbr\u003e型検査はなぜ必要か。 \u003cbr\u003e強い型付けとは何か\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Typical data types. \u003cbr\u003e- Strong typing. \u003cbr\u003e- Why do we need type inference? \u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第5回 式と文\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Expressions and Statements]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e式の評価と、代表的な演算子。 \u003cbr\u003e演算子と型の関係。 \u003cbr\u003e制御文について。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Evaluation of expressions. \u003cbr\u003e- Control structures. \u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第6回 副プログラム\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Subprogram]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e副プログラムを呼び出す時の引数の受け渡し。 \u003cbr\u003e副プログラムと型の関係。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- How arguments are passed to subprograms. \u003cbr\u003e- Relation between types and subprograms.\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第7回 抽象データ型\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Abstract Data Type]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eデータと手続きのカプセル化について。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Encapsulation of procedures and data.\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第8回 オブジェクト指向\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Object Oriented Programming Language]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eオブジェクト指向プログラミングとは何か。 \u003cbr\u003eいろいろなオブジェクト指向プログラミング言語の比較。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Definition of object oriented programming. \u003cbr\u003e- Comparison among various object oriented programming languages. \u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第9回 スクリプト言語\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Script Language]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003ePerl, Python, Ruby などスクリプト言語の特徴と比較。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Comparison among various script languages.\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第10回 並行プログラミング(1)\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Concurrent Programming (1)]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e並行プログラミングの問題点。 \u003cbr\u003eセマフォ、モニタ、スレッドについて。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Problems about concurrency. \u003cbr\u003e- Basic concepts of synchronization.\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第11回 並行プログラミング(2)\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Concurrent Programming (2)]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e実際の並行プログラミング言語の例。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Examples of concurrent programming languages.\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第12回 例外処理\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Exception]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e例外処理とは何か。 \u003cbr\u003e各種プログラミング言語における例外処理機構の比較。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Basic concepts of exception handling. \u003cbr\u003e- Comparison among exception handling mechanisms in various programming languages.\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第13回 関数型言語\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Functional Programming Languages]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e関数型プログラミングとは何か。 \u003cbr\u003eラムダ計算の紹介。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Definition of functional programming. \u003cbr\u003e- Brief introduction to the lambda calculus.\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第14回 論理型言語\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[Logic Programming Language]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003e論理型プログラミングとは何か。 \u003cbr\u003e論理型プログラムの構造と実行。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Definition of logic programming. \u003cbr\u003e- Unification and resolution.\u003cbr\u003e\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n  \u003cp\u003e\n  \u003cu\u003e第15回 中間レポート\u003c/u\u003e\n    \u003cbr\u003e\n    \u003cspan style=\"color: #856a5d;\"\u003e[mid-term paper]\u003c/span\u003e\n  \u003c/p\u003e\n  \u003cp\u003e\n  \u003c/p\u003e\u003cp\u003eある一つの言語を選んで、他の言語との比較を行う。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003e- Comparison between a language of your choice and other languages.\u003c/p\u003e\n  \n  \u003cp\u003e  \u003c/p\u003e\n  \u003chr\u003e\n\n  \u003cu\u003e15回目に相当するその他の授業計画\u003c/u\u003e\u003cbr\u003e\n  \u003cp\u003e中間レポートの発表。\u003c/p\u003e\n  \u003cp style=\"color: #856a5d;\"\u003ePresentation of mid-term papers.\u003c/p\u003e\n","course_code":"プログラミング言語論","default_view":"modules","root_account_id":1,"enrollment_term_id":3,"license":null,"grade_passback_setting":null,"end_at":null,"public_syllabus":false,"public_syllabus_to_auth":true,"storage_quota_mb":30000,"is_public_to_auth_users":true,"term":{"id":3,"name":"2020年秋学期","start_at":null,"end_at":null,"created_at":"2020-09-03T21:25:41Z","workflow_state":"active","grading_period_group_id":null},"apply_assignment_group_weights":false,"calendar":{"ics":"https://sol.sfc.keio.ac.jp/feeds/calendars/course_H0BDDKTcsO8mmFEiXglcXBBi1OV2FjAY1uCnvc2e.ics"},"time_zone":"Asia/Tokyo","blueprint":false,"enrollments":[],"hide_final_grades":false,"workflow_state":"available","restrict_enrollments_to_course_dates":false,"overridden_course_visibility":""}